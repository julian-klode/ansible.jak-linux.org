---

- name: install postfix and postsrsd
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - postfix
    - postsrsd
    state: present

- name: install postsrsd apparmor profile
  copy: src=etc/apparmor.d/usr.sbin.postsrsd dest=/etc/apparmor.d/usr.sbin.postsrsd
  register: postsrsd_apparmor

- name: enforce postsrsd
  command: aa-enforce usr.sbin.postsrsd
  when: postsrsd_apparmor.changed and ansible_apparmor["status"] == "enabled"

- name: esure postsrsd is running
  service:
    name: postsrsd
    state: started
    enabled: yes

- name: esure postfix is running
  service:
    name: postfix
    state: started
    enabled: yes

- name: install postfix master.cf
  copy: src=etc/postfix/master.cf dest=/etc/postfix/master.cf
  register: postfix_master_cf

- name: install postfix main.cf
  template: src=main.cf.j2 dest=/etc/postfix/main.cf
  register: postfix_main_cf

- name: install aliases
  template: src=aliases.j2 dest=/etc/aliases
  notify: newaliases

- name: reload postfix on config change
  service:
    name: postfix
    state: reloaded
  when: postfix_master_cf.changed or postfix_main_cf.changed

# Open ports
- name: ufw allow Postfix
  ufw: rule=allow name=Postfix

- name: ufw allow Postfix Submission
  ufw: rule=limit name="Postfix Submission"

# Check availability
- name: ensure smtp port is open
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 25
    timeout: 1
  delegate_to: localhost
  tags: assert

- name: ensure submit port is open
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 587
    timeout: 1
  delegate_to: localhost
  tags: assert

# Install postward
- name: remove postforward
  file:
    path: /usr/local/bin/postforward
    state: absent

- name: remove postforward apparmor profile
  file:
    path: /etc/apparmor.d/usr.local.bin.postforward
    state: absent
