- name: install weechat gpg key
  apt_key:
    id: 11E9DE8848F2B65222AA75B8D1820DB22A11534E
    keyserver: keyserver.ubuntu.com
    keyring: /etc/apt/trusted.gpg.d/weechat.gpg

- name: add weechat preferences
  copy:
    content: |
      Package: *
      Pin: origin weechat.org
      Pin-Priority: -1
      
      Package: weechat weechat-core weechat-curses weechat-dev weechat-doc weechat-headless weechat-javascript weechat-plugins weechat-python
      Pin: origin weechat.org
      Pin-Priority: 990
      
      Package: weechat-guile weechat-lua weechat-perl weechat-php weechat-ruby weechat-tcl
      Pin: release *
      Pin-Priority: -1
    dest: /etc/apt/preferences.d/weechat.pref
- name: add weechat repository
  apt_repository:
    repo: deb https://weechat.org/{{ansible_distribution| lower}} {{ ansible_lsb.codename | default(ansible_distribution_release) }} main
    state: present
    filename: weechat
    update_cache: true

- name: install weechat, tmux, mosh
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - weechat-curses
    - weechat-plugins
    - weechat-python
    - tmux
    - mosh
    - aspell-en


# Discretionary access control
- name: Add weechat group
  group: name=weechat
- name: Add weechat user
  user: name=weechat group=weechat create_home=true

# Mandatory access control
- name: install weechat apparmor
  copy: src=etc/apparmor.d/usr.bin.weechat.apparmor dest=/etc/apparmor.d/usr.bin.weechat
  notify:
    - aa-enforce weechat
    - systemctl restart weechat

# Configure service
- name: install weechat systemd unit file
  copy: src=etc/systemd/system/weechat.service dest=/etc/systemd/system/weechat.service
  notify:
    - systemctl daemon-reload
    - systemctl restart weechat

- name: ensure weechat is running
  service: name=weechat state=started enabled=true

- name: Check if weechat is running and enforced
  shell: ps auxZ | grep weechat | grep -v grep | grep .
  check_mode: no
  changed_when: false

# Wait for weechat to generate relay conf and fifo so we can configure relay
- name: Check that relay.conf exists
  wait_for: path=/home/weechat/.weechat/relay.conf timeout=1
- name: Check that control fifo exists
  wait_for: path=/home/weechat/.weechat/weechat_fifo timeout=1

- command: cat /home/weechat/.weechat/relay.conf
  register: weechat_relay_conf
  check_mode: no
  changed_when: false

- name: add weechat relay
  shell: |
    echo '*/set relay.network.bind_address "::ffff:127.0.0.1"' >> /home/weechat/.weechat/weechat_fifo
    echo '*/relay add weechat 9000' >> /home/weechat/.weechat/weechat_fifo
    echo '*/save relay' >> /home/weechat/.weechat/weechat_fifo
  when:
    weechat_relay_conf.stdout.find('weechat = 9000') == -1 or weechat_relay_conf.stdout.find('bind_address = "::ffff:127.0.0.1"') == -1

- name: setup tmux
  copy:
    content: |
      set -g status off
      set-option -g set-titles on
      set-option -g set-titles-string "#W"
      set -g focus-events on
    dest: /home/weechat/.tmux.conf

# Configure firewall and check that ports work
- name: ufw limit mosh
  ufw: rule=limit name=mosh

- name: ensure weechat port is open
  wait_for: host=127.0.0.1 port=9000 timeout=1
  tags: assert

- name: Ensure weechat relay port is not open to public
  wait_for: host="{{ inventory_hostname }}" port=9000 timeout=1 state=stopped
  delegate_to: localhost
  when: inventory_hostname != "localhost"
  tags: assert
