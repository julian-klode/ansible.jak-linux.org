{# Configurate server blocks for the domains. Generates one block per
   alias that redirects to the cname #}
{% for domain in [item.cname] + item.alias %}
# Ansible managed
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ domain }};

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/{{ item.cname }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ item.cname }}/privkey.pem; # managed by Certbot
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/letsencrypt/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/{{ item.cname }}/chain.pem;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months) and others
    add_header Strict-Transport-Security max-age=15768000;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

 {% if domain == item.cname %}
    index index.html index.htm index.nginx-debian.html;
    root /var/www/{{ domain }};

{% if item.nginx_locations is defined %}
   {{ item.nginx_locations }}
{% else %}
    location / {
        try_files $uri $uri/ =404;
    }

    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff2|otf)$ {
        expires 365d;
    }

    location = /favicon.ico {
      return 204;
      access_log     off;
      log_not_found  off;
    }
{% endif %}

    {{ item.nginx_add_locations | default("") }}
 {% else %}
    return 301 https://{{item.cname}}$request_uri;
 {% endif %}
}
{% endfor %}
